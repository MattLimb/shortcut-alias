---
# General Purpose Administrative Commands

name: # The Name of the Command Set - REQUIRED
description: # A brief description of the command's intended purpose - REQUIRED
cmd: # The word used to run the command - REQUIRED

# Optional Static Variables ONLY availiable to this command set
variables:
  key: value # This will be accessiable via {{ variables.key}}

# Optional Environmental Variables to pull ONLY for this command set
env: 
  key: ENV_KEY # This is a bit special. Key is the variable in shortcut-alias to assign the value of "ENV_KEY" to once fetched from the environment. Accessiable via {{ variables.env.key }}

# Opional inforamtion to be added as options.
options:
  # Use YAML arrays to identify each options.
  <option_name>: # String - This is the name of the option. You can use this: `option:<option_name>` to access this futher down.
    # Option Access
    short: # String - OPTIONAL :- the short version of the option, if wanted. Please use a single dash prefix for this option.
    long: # String - OPTIONAL :- the long version of the option if wanted. Please use double dash prefix to represent this.
    # If neither short or long is specified, the <option_name> is used as the long option. 

    # Option Type
    arg_type: # <flag|data> REQUIRED Default Flag
      # Flag provides a boolean result, with a default of False.
      # Data requires at least one arg to be passed to it.
    
    # Data only attributes
    default: # String, Integer, Float - Provide a default value if none passed in. Defaults to None.
    type: # <string|integer|float> Will attempt to convert the input to a given type. Only supports str, int and float.

    # Generic attributes
    required: # Boolean - Is the option required to run the command.
    description: # String - Help text for the option - OPTIONAL

# The command list. The instructions to follow when called.
commands:
  <command_name>: # String - A simple command name.
    # Basic command settings
    description: # String - A brief description of the command
    background: # OPTIONAL - One of "shell", "direct" - defaults to shell. Shell uses the default shell to run the program, whereas direct bypasses the shell. 
    cmd: # String or list of strings- The command to run. (Can include `option:<option_name>` in the cmd string. This will substitute this for name of value of the option.)
    if: # String or list of strings - Conditional statements in the form of `option:<option_name>` or `command:<command_name>`.
      "{{ option.name }}": # or "{{ conditional }}" - This can be cast to a type if necessary.
        # If data option, support these
        # For Strings|Integers|Floats AND FLAGS
        eq: # Bool, String, Integer, Float - The value to be equal to.
        not_eq: # Bool, String, Integer, Float - The value to be not equal to.
        
        # Integers and Floats ONLY
        gt: # Greater Than
        lt: # Less Than
        le: # Greater Than or Equal To
        ge: # Less Than or Equal To

        # The following require a key:value below this, of the following: eq, neq, gt, ge, lt, le.
        and: # will return true if all of the commands below this return true.
        or: # will return true if at least one of the commands below this return true.

      # Jinja 2 - Use Jinja2 Templating to get the right object. 
      # Use the dot notation for traversing json.
      "{{command.name}}":
        returns: # The status code returned. Access this via {{ commands.name.returns }}
        output: # The output of the command, if command has not been run in the background. Access via {{ commands.name.output }}
